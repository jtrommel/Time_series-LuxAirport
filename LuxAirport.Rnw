\documentclass{tufte-book}
\usepackage{graphicx}  % werken met figuren
\usepackage{gensymb} % werken met wetenschappelijke eenheden\usepackage{geometry}
\usepackage{changepage} % http://ctan.org/pkg/changepage
\usepackage[dutch,british]{babel} % instelling van de taal (woordsplitsing, spellingscontrole)
\usepackage[parfill]{parskip} % Paragrafen gescheiden door witte lijn en geen inspringing
\usepackage[font=small,skip=3pt]{caption} % Minder ruimte tussen figuur/table en ondertitel. Ondertitel klein
\usepackage{capt-of}
\usepackage{indentfirst}
\setlength{\parindent}{0.7cm}
\usepackage{enumitem} % Laat enumerate werken met letters
\usepackage{url}
\usepackage{lipsum}
\setkeys{Gin}{width=\linewidth,totalheight=\textheight,keepaspectratio}
% Prints a trailing space in a smart way.
\usepackage{xspace}
\usepackage{hyperref}
\usepackage{amsmath}

\DeclareGraphicsExtensions{.pdf,.png,.jpg}

% Alter some LaTeX defaults for better treatment of figures:
% See p.105 of "TeX Unbound" for suggested values.
% See pp. 199-200 of Lamport's "LaTeX" book for details.
%   General parameters, for ALL pages:
    \renewcommand{\topfraction}{0.9}	% max fraction of floats at top
    \renewcommand{\bottomfraction}{0.9}	% max fraction of floats at bottom
%   Parameters for TEXT pages (not float pages):
    \setcounter{topnumber}{2}
    \setcounter{bottomnumber}{2}
    \setcounter{totalnumber}{4}     % 2 may work better
    \renewcommand{\textfraction}{0.1}	% allow minimal text w. figs
%   Parameters for FLOAT pages (not text pages):
    \renewcommand{\floatpagefraction}{0.8}	% require fuller float pages
% N.B.: floatpagefraction MUST be less than topfraction !!
\setcounter{secnumdepth}{3}

\newcommand{\tthdump}[1]{#1}

\newcommand{\openepigraph}[2]{
  \begin{fullwidth}
  \sffamily\large
    \begin{doublespace}
      \noindent\allcaps{#1}\\ % epigraph
      \noindent\allcaps{#2} % author
    \end{doublespace}
  \end{fullwidth}
}


\usepackage{makeidx}
\makeindex

\title{Time-series example: air traffic data from Lux Airport}
\author{Jan Trommelmans}

\begin{document}
\SweaveOpts{concordance=TRUE,prefix.string=AL}
\setkeys{Gin}{width=1.1\marginparwidth} %% Sweave

<<echo=FALSE>>=
library(tidyverse)
library(broom)
library(gridExtra)
library(lubridate)
library(forecast)
library(tsibble)
library(furrr)
library(brotools)
@

% Setting the ggplot theme:
<<echo=FALSE>>=
JT.theme <- theme(panel.border = element_rect(fill = NA, colour = "gray10"),
                  panel.background = element_blank(),
                  panel.grid.major = element_line(colour = "gray85"),
                  panel.grid.minor = element_line(colour = "gray85"),
                  panel.grid.major.x = element_line(colour = "gray85"),
                  axis.text = element_text(size = 8 , face = "bold"),
                  axis.title = element_text(size = 9 , face = "bold"),
                  plot.title = element_text(size = 12 , face = "bold"),
                  strip.text = element_text(size = 8 , face = "bold"),
                  strip.background = element_rect(colour = "black"),
                  legend.text = element_text(size = 8),
                  legend.title = element_text(size = 9 , face = "bold"),
                  legend.background = element_rect(fill = "white"),
                  legend.key = element_rect(fill = "white"))
@

% Functions
<<echo=FALSE>>=
ihs <- function(x) {
  log(x+sqrt(x**2 + 1)) # inverse hyperbolic sine
}
@

<<echo=FALSE>>=
to_tibble = function(forecast_object) {
point_estimate <- forecast_object$mean %>%
  as_tsibble() %>%
  rename(point_estimate =  value,
         date = index)
upper <- forecast_object$upper %>%
  as_tsibble() %>%
  spread(key, value) %>%
  rename(date =  index,
         upper80 = `80%`,
         upper95 = `95%`)
lower <- forecast_object$lower %>%
  as_tsibble() %>%
  spread(key, value) %>%
  rename(date =  index,
         lower80 = `80%`,
         lower95 = `95%`)
reduce(list(point_estimate, upper, lower), full_join, by = "date")
}
@

\frontmatter
\chapter*{Easy time-series predicton with R: a tutorial with air traffic data from Lux Airport}

\mainmatter

\section{Source}
This worked out example comes from B. Rodrigues's blog ''Econometrics and Free Software" - 14/11/2018 

\subsection{Raw data}
<<label=rawmonth,fig=TRUE,include=FALSE, echo=FALSE>>=
avia_clean_quarterly <- read_csv("./Data/avia_clean_quarterly.csv")
avia_clean_monthly <- read_csv("./Data/avia_clean_monthy.csv")
avia_clean_monthly %>%
  group_by(date) %>%
  summarise(total=sum(passengers)) %>%
  ggplot() +
  ggtitle("Raw data") +
  geom_line(aes(y=total, x=date), colour="#82518c") +
  scale_x_date(date_breaks="1 year", date_labels= "%m-%Y")
@

\begin{figure}
\includegraphics[width=1\textwidth]{AL-rawmonth}
\caption{}
\label{fig:rawmonth}
\setfloatalignment{b}% forces caption to be bottom-aligned
\end{figure}

\subsection{Logged data}

Logged data = data after transforming it with the inverted hyperbolic sine transformation:

<<label=loggedmonth,fig=TRUE,include=FALSE, echo=FALSE>>=
avia_clean_monthly %>%
  group_by(date) %>%
  summarise(total = sum(passengers)) %>%
  mutate(total_ihs = ihs(total)) %>%
  ggplot() +
  ggtitle("Logged data") +
  geom_line(aes(y=total_ihs, x=date), colour="#82518c") +
  scale_x_date(date_breaks="1 year", date_labels= "%m-%Y")
@

\begin{figure}
\includegraphics[width=1\textwidth]{AL-loggedmonth}
\caption{}
\label{fig:loggedmonth}
\setfloatalignment{b}% forces caption to be bottom-aligned
\end{figure}

\section{Working with time series}

We use the data from before 2015 as out training set and convert the ''passenger" column from data to a time series object with the \textit{ts()}-function.

<<echo=FALSE>>=
avia_clean_train <- avia_clean_monthly %>%
  select(date, passengers) %>%
  filter(year(date) < 2015) %>%
  group_by(date) %>%
  summarise(total_passengers = sum(passengers)) %>%
  pull(total_passengers) %>%
  ts(., frequency = 12, start = c(2005,1))
avia_clean_test <- avia_clean_monthly %>%
  select(date, passengers) %>%
  filter(year(date) >= 2015) %>%
  group_by(date) %>%
  summarise(total_passengers = sum(passengers)) %>%
  pull(total_passengers) %>%
  ts(., frequency = 12, start = c(2005,1))
@

Transform the data: logging stabilises the variance of the time series.
<<echo=FALSE>>=
logged_data <- ihs(avia_clean_train)
@

<<>>=
(model_fit <- auto.arima(logged_data))
@

The result says that the best model would be an ARIMA (2,1,1)(2,1,0)\_(12) which means a seasonal autoregressive model with p=2, d=1, q=1, P=2 and D=1.

We use this model to forecast the next 39 months. The \textit{tsibble}-package converts \emph{time-series-aware}-objects to \emph{time-aware}-objects.
<<>>=
model_forecast <- forecast(model_fit, h = 39)
estimated_data <- to_tibble(model_forecast)
@

<<label=forecast,fig=TRUE,include=FALSE, echo=FALSE>>=
avia_clean_monthly %>%
  group_by(date) %>%
  summarise(total = sum(passengers)) %>%
  mutate(total_ihs = ihs(total)) %>%
  ggplot() +
  ggtitle("Forecast from 2015") +
  geom_line(aes(y=total_ihs, x=date), colour="#82518c") +
  scale_x_date(date_breaks="1 year", date_labels= "%m-%Y") +
  geom_ribbon(data=estimated_data, aes(x=date, ymin= lower95, ymax=upper95), fill="#666018", alpha=0.2) +
  geom_line(data=estimated_data, aes(x=date, y= point_estimate), linetype=2, colour="#8e9d98") +
  JT.theme
@

\begin{figure}
\includegraphics[width=1\textwidth]{AL-forecast}
\caption{}
\label{fig:forecast}
\setfloatalignment{b}% forces caption to be bottom-aligned
\end{figure}

The true results lie nicely within the 95\% -confidence interval!

\section{Part 2: Searching for optimal hyper-parameters}

In Arima you have to specify 7 hyper-parameters:

\begin{itemize}
  \item 3 trend hyper-parameters called p, d and q
  \item 4 seasonal hyper-parameters called P, D, Q and S
\end{itemize}

Box and Jenkins described the meaning of these parameters in ''Time Series Analysis". Here the author uses a brute force method: he tests them all and picks the one with the lowst RMSE value.


<<echo=FALSE>>=
logged_train.data <- ihs(avia_clean_train)
@
\newpage
\textbf{Thanks} \\
\medskip
R Core Team (2018). R: A language and environment for statistical computing. R Foundation for Statistical Computing, Vienna, Austria. URL https://www.R-project.org/.
\medskip
<<>>=
sessionInfo()
@

\end{document}